name: "RiboNet"
layer {
  name: "ribo_train"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
#  transform_param {
#    scale: 0.00390625
#  }
  hdf5_data_param {
    source: "/home/szhang/Riboseq/r64/Pop14/data/caffe_data/train.txt"
    batch_size: 32
  }
}
layer {
  name: "ribo_val"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
#  transform_param {
#    scale: 0.00390625
#  }
  hdf5_data_param {
    source: "/home/szhang/Riboseq/r64/Pop14/data/caffe_data/val.txt"
    batch_size: 256
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_h: 1
    kernel_w: 7
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_h: 1
    kernel_w: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_h: 1
    kernel_w: 9
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_h: 1
    kernel_w: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_h: 1
    kernel_w: 13
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_h: 1
    kernel_w: 3
    stride: 2
  }
}
layer {
  name: "concat"
  #bottom: "pool1"
  #bottom: "pool2"
  bottom: "pool3"
  top: "concat"
  type: "Concat"
  concat_param {
    axis: 3
  }
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "concat"
  top: "concat"
  dropout_param {
    dropout_ratio: 0.5
  }
}
#layer {
#  name: "ip1"
#  type: "InnerProduct"
#  bottom: "concat"
#  top: "ip1"
#  param {
#    lr_mult: 1
#  }
#  param {
#    lr_mult: 1
#  }
#  inner_product_param {
#    num_output: 2048
#    weight_filler {
#      type: "xavier"
#    }
#    bias_filler {
#      type: "constant"
#    }
#  }
#}
#layer {
#  name: "relu4"
#  type: "ReLU"
#  bottom: "ip1"
#  top: "ip1"
#}
#layer {
#  name: "drop1"
#  type: "Dropout"
#  bottom: "ip1"
#  top: "ip1"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "concat"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
